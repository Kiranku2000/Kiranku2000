&---------------------------------------------------------------------
& Report ZKI_OOPS_ALV
&---------------------------------------------------------------------
&
&---------------------------------------------------------------------
REPORT zki_oops_alv.
DATAit_vbak   TYPE zitv_bak,
     wa_vbak   LIKE LINE OF it_vbak,
     it_vbap   TYPE zit_vbap,
     wa_vbap   LIKE LINE OF it_vbap,
     it_kna1   TYPE zitk_na1,
     wa_kna1   LIKE LINE OF it_kna1,
     it_t006a  TYPE zit_t006a,
     wa_t006a  LIKE LINE OF it_t006a,
     it_header TYPE zit_header,
     wa_header LIKE LINE OF it_header,
     it_item   TYPE zit_items,
     wa_item   LIKE LINE OF IT_item.

SELECT-OPTIONS s_num FOR wa_vbak-Vbeln.
class cl DEFINITION.
  PUBLIC SECTION.
  METHODS HANDLE_EVENT FOR EVENT DOUBLE_CLICK OF cl_salv_EVENTS_table IMPORTING ROW COLUMN.
  ENDCLASS.
  class cl IMPLEMENTATION.
    METHOD HANDLE_EVENT.
    READ TABLE IT_HEADER INTO wa_header INDEX ROW.
    CLEAR IT_ITEM.
    CASE COLUMN.
      WHEN 'VBELN'.

         select vbeln posnr pstyv arktx kwmeng zieme netwr from vbap into table it_vbap where vbeln eq wa_header-vbeln.
  select msehi msehl from t006a into table it_t006a FOR ALL ENTRIES IN it_vbap where msehi eq it_vbap-zieme and spras eq sy-langu.
    LOOP AT it_vbap into wa_vbap.
      READ TABLE it_t006a into wa_t006a with key msehi = wa_vbap-zieme.
      MOVE-CORRESPONDING wa_vbap TO wa_item.
      MOVE-CORRESPONDING wa_t006a TO wa_item.
      APPEND wa_item TO it_item.
    ENDLOOP.
    cl_salv_table=factory(
      EXPORTING
        list_display   = if_salv_c_bool_sap=false  ALV Displayed in List Mode
        r_container    =                            Abstract Container for GUI Controls
        container_name =
      IMPORTING
        r_salv_table   =       DATA(O_ALV2)                     Basis Class Simple ALV Tables
      CHANGING
        t_table        = it_item
    ).
    CATCH cx_salv_msg.  ALV General Error Class with Message

    O_ALV2-DISPLAY( ).
    ENDCASE.
    ENDMETHOD.
    ENDCLASS.

    DATAO_EVENT TYPE REF TO CL.

START-OF-SELECTION.
CREATE OBJECT O_EVENT.
  SELECT vbeln audat netwr kunnr FROM vbak INTO TABLE it_vbak WHERE vbeln IN s_num.
  SELECT kunnr name1 FROM kna1 INTO TABLE it_kna1 FOR ALL ENTRIES IN it_vbak WHERE kunnr EQ it_vbak-kunnr.
  LOOP AT it_vbak INTO wa_vbak.
    READ TABLE it_kna1 INTO wa_kna1 WITH KEY kunnr = wa_vbak-kunnr.
    MOVE-CORRESPONDING wa_vbak TO wa_header.
    MOVE-CORRESPONDING wa_kna1 TO wa_header.
    APPEND wa_header TO it_header.
  ENDLOOP.

cl_salv_table
cl_salv_table=factory(
  EXPORTING
    list_display   = if_salv_c_bool_sap=false  ALV Displayed in List Mode
    r_container    =                            Abstract Container for GUI Controls
    container_name =
  IMPORTING
    r_salv_table   =    DATA(O_ALV1)                        Basis Class Simple ALV Tables
  CHANGING
    t_table        = IT_HEADER
).
CATCH cx_salv_msg.  ALV General Error Class with Message

SET HANDLER O_EVENT-HANDLE_EVENT FOR O_ALV1-get_event( ).
O_ALV1-DISPLAY( ).