*&---------------------------------------------------------------------*
*& Report ZKI_OO_ALV_SALES
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT ZKI_OO_ALV_SALES.

DATA : it_vbak   TYPE zitv_bak,
       wa_vbak   LIKE LINE OF it_vbak,
       it_kna1   TYPE zitk_na1,
       wa_kna1   LIKE LINE OF it_kna1,
       it_vbap   TYPE zit_vbap,
       wa_vbap   LIKE LINE OF it_vbap,
       it_t006a  TYPE zit_t006a,
       wa_t006a  LIKE LINE OF it_t006a,
       it_header TYPE zit_header,
       wa_header LIKE LINE OF it_header,
       it_item   TYPE zit_items,
       wa_item   LIKE LINE OF it_item.
SELECT-OPTIONS s_num FOR wa_vbak-vbeln.
CLASS cl DEFINITION.
  PUBLIC SECTION.
    METHODS enable_doubleclick FOR EVENT double_click OF cl_salv_events_table IMPORTING row column.
ENDCLASS.
CLASS cl IMPLEMENTATION.
  METHOD enable_doubleclick.


    CLEAR it_item.
    SELECT vbeln posnr pstyv arktx kwmeng zieme netwr FROM vbap INTO TABLE it_vbap where vbeln eq wa_vbak-vbeln .
    SELECT msehi msehl FROM t006a INTO TABLE it_t006a FOR ALL ENTRIES IN it_vbap WHERE msehi EQ it_vbap-zieme AND spras EQ sy-langu.
    LOOP AT it_vbap INTO wa_vbap.
      READ TABLE it_t006a INTO wa_t006a WITH KEY msehi = wa_vbap-zieme.
      MOVE-CORRESPONDING wa_vbap TO wa_item.
      MOVE-CORRESPONDING wa_t006a TO wa_item.
      APPEND wa_item TO it_item.
      CLEAR wa_item.
    ENDLOOP.
    cl_salv_table=>factory(
*      EXPORTING
*        list_display   = if_salv_c_bool_sap=>false " ALV Displayed in List Mode
*        r_container    =                           " Abstract Container for GUI Controls
*        container_name =
   IMPORTING
     r_salv_table   =     DATA(o_alv3)                    " Basis Class Simple ALV Tables
      CHANGING
        t_table        = it_item

    ).
     o_alv3->display( ).
*    CATCH cx_salv_msg. " ALV: General Error Class with Message
     ENDMETHOD.
  ENDCLASS.


DATA o_event TYPE REF TO cl.


START-OF-SELECTION.
create object o_event.
  SELECT vbeln audat netwr kunnr FROM vbak INTO TABLE it_vbak WHERE vbeln IN s_num.
  SELECT kunnr name1 FROM kna1 INTO TABLE it_kna1 FOR ALL ENTRIES IN it_vbak WHERE kunnr EQ it_vbak-kunnr.
  LOOP AT it_vbak INTO wa_vbak.
    READ TABLE it_kna1 INTO wa_kna1 WITH KEY kunnr = wa_vbak-kunnr.
    MOVE-CORRESPONDING wa_vbak TO wa_header.
    MOVE-CORRESPONDING wa_kna1 TO wa_header.
    APPEND wa_header TO it_header.
    CLEAR wa_header.
  ENDLOOP.
  cl_salv_table=>factory(
*    EXPORTING
*      list_display   = if_salv_c_bool_sap=>false " ALV Displayed in List Mode
*      r_container    =                           " Abstract Container for GUI Controls
*      container_name =
    IMPORTING
      r_salv_table   =     DATA(o_alv1)                      " Basis Class Simple ALV Tables
    CHANGING
      t_table        = it_header
  ).
  DATA(o_event_class) = o_alv1->get_event( ).
  SET HANDLER o_event->enable_doubleclick FOR o_event_class.

*  CATCH cx_salv_msg. " ALV: General Error Class with Message
  o_alv1->display( ).